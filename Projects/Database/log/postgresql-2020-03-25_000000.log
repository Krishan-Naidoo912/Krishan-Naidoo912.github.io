2020-03-25 20:32:44.746 CAT [31904] ERROR:  syntax error at or near "NOT" at character 66
2020-03-25 20:32:44.746 CAT [31904] STATEMENT:  CREATE TABLE login (
		id serial PRIMARY KEY,
		hash varchar(100), NOT NULL,
		email text UNIQUE NOT NULL
	);
	
2020-03-25 22:28:48.747 CAT [10768] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2020-03-25 22:43:27.949 CAT [33160] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2020-03-25 22:44:37.571 CAT [23792] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2020-03-25 22:46:21.081 CAT [30344] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2020-03-25 22:46:38.853 CAT [21812] ERROR:  duplicate key value violates unique constraint "users_email_key"
2020-03-25 22:46:38.853 CAT [21812] DETAIL:  Key (email)=(Krishan1982@gmail.com) already exists.
2020-03-25 22:46:38.853 CAT [21812] STATEMENT:  insert into "users" ("email", "joined", "name") values ($1, $2, $3) returning *
2020-03-25 22:46:47.549 CAT [21812] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2020-03-25 22:49:46.568 CAT [6492] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2020-03-25 23:00:16.761 CAT [34600] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2020-03-25 23:01:07.767 CAT [27532] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2020-03-25 23:01:18.584 CAT [32840] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2020-03-25 23:04:05.754 CAT [27484] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2020-03-25 23:07:08.489 CAT [33588] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2020-03-25 23:09:41.436 CAT [30900] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2020-03-25 23:10:47.616 CAT [19092] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2020-03-25 23:11:09.213 CAT [14072] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2020-03-25 23:13:58.025 CAT [21640] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2020-03-26 00:25:32.095 CAT [30156] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2020-03-26 00:28:38.114 CAT [14036] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2020-03-26 00:36:35.287 CAT [17220] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2020-03-26 01:17:31.435 CAT [21636] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2020-03-26 10:14:37.434 CAT [26828] LOG:  using stale statistics instead of current ones because stats collector is not responding
2020-03-26 10:14:37.434 CAT [26828] STATEMENT:  /*pga4dash*/
	SELECT 'session_stats' AS chart_name, row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT count(*) FROM pg_stat_activity WHERE datname = (SELECT datname FROM pg_database WHERE oid = 16413)) AS "Total",
	   (SELECT count(*) FROM pg_stat_activity WHERE state = 'active' AND datname = (SELECT datname FROM pg_database WHERE oid = 16413))  AS "Active",
	   (SELECT count(*) FROM pg_stat_activity WHERE state = 'idle' AND datname = (SELECT datname FROM pg_database WHERE oid = 16413))  AS "Idle"
	) t
	UNION ALL
	SELECT 'tps_stats' AS chart_name, row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT sum(xact_commit) + sum(xact_rollback) FROM pg_stat_database WHERE datname = (SELECT datname FROM pg_database WHERE oid = 16413)) AS "Transactions",
	   (SELECT sum(xact_commit) FROM pg_stat_database WHERE datname = (SELECT datname FROM pg_database WHERE oid = 16413)) AS "Commits",
	   (SELECT sum(xact_rollback) FROM pg_stat_database WHERE datname = (SELECT datname FROM pg_database WHERE oid = 16413)) AS "Rollbacks"
	) t
	UNION ALL
	SELECT 'ti_stats' AS chart_name, row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT sum(tup_inserted) FROM pg_stat_database WHERE datname = (SELECT datname FROM pg_database WHERE oid = 16413)) AS "Inserts",
	   (SELECT sum(tup_updated) FROM pg_stat_database WHERE datname = (SELECT datname FROM pg_database WHERE oid = 16413)) AS "Updates",
	   (SELECT sum(tup_deleted) FROM pg_stat_database WHERE datname = (SELECT datname FROM pg_database WHERE oid = 16413)) AS "Deletes"
	) t
	UNION ALL
	SELECT 'to_stats' AS chart_name, row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT sum(tup_fetched) FROM pg_stat_database WHERE datname = (SELECT datname FROM pg_database WHERE oid = 16413)) AS "Fetched",
	   (SELECT sum(tup_returned) FROM pg_stat_database WHERE datname = (SELECT datname FROM pg_database WHERE oid = 16413)) AS "Returned"
	) t
	UNION ALL
	SELECT 'bio_stats' AS chart_name, row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT sum(blks_read) FROM pg_stat_database WHERE datname = (SELECT datname FROM pg_database WHERE oid = 16413)) AS "Reads",
	   (SELECT sum(blks_hit) FROM pg_stat_database WHERE datname = (SELECT datname FROM pg_database WHERE oid = 16413)) AS "Hits"
	) t
	
